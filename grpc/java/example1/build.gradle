apply plugin: 'com.google.protobuf'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}


group 'com.aaron'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven {
        url "http://120.25.156.197:8081/nexus/content/groups/public/"
    }
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
    maven {
        url "https://mirrors.huaweicloud.com/repository/maven/"
        name = "华为开源镜像库"
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    jcenter()
    mavenCentral()

}

def grpcVersion = '1.25.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.10.0'
def protocVersion = protobufVersion

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"

    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.25.1"

//    if (JavaVersion.current().isJava9Compatible()) {
//        // Workaround for @javax.annotation.Generated
//        // see: https://github.com/grpc/grpc-java/issues/3633
//        compile 'javax.annotation:javax.annotation-api:1.3.1'
//    }

}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

startScripts.enabled = false

task helloWorldServer(type: CreateStartScripts) {
    mainClassName = 'com.aaron.grpc.example.helloworld.HelloWorldServer'
    applicationName = 'hello-world-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task helloWorldClient(type: CreateStartScripts) {
    mainClassName = 'com.aaron.grpc.example.helloworld.HelloWorldClient'
    applicationName = 'hello-world-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(helloWorldServer)
    from(helloWorldClient)
    fileMode = 0755
}
