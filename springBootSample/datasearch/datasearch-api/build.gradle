apply plugin: 'maven-publish'

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile "org.apache.commons:commons-lang3:3.4"
    compile('com.aaron:tools:1.0.0.RELEASE'){
        transitive=false
    }
    compile 'org.springframework.data:spring-data-elasticsearch'
    //compile "javax.servlet:javax.servlet-api:3.1.0"
}


task apiJar(type: Jar) {
    baseName "datasearch-api"
    version  "$version"

    from sourceSets.main.output
    //exclude '**/impl/**'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    //classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            if(version.endsWith('-SNAPSHOT')) {
                url "http://192.168.1.112:8081/nexus/content/repositories/snapshots/"
            } else {
                url "http://192.168.1.112:8081/nexus/content/repositories/releases/"
            }
            credentials {
                username = 'deployment'
                password = 'deployment123'
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            /*
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
            */

            groupId "com.aaron"
            artifactId	"datasearch-api"
            version 	"$version"
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            //没错 我同时把resource指向了java目录 这样就可以收录java目录中的资源文件了
            resources {
                srcDirs = ['src/main/resources','src/main/java']
            }
        }
    }
}
