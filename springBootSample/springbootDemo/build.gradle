group 'com.aaron'
version '1.0.0-SNAPSHOT'

buildscript {
    repositories {
        mavenLocal()
        maven {
            url "http://120.25.156.197:8081/nexus/content/groups/public/"
        }
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
//        maven { url"https://repo.spring.io/libs-release" }
//        maven { url "http://repo.spring.io/snapshot" }
//        maven { url "http://repo.spring.io/milestone" }
        jcenter()
    }
    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.8.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

allprojects {
    apply plugin: 'java'

    // JDK 8
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // 全局属性设置
    ext {
        // java文件编码方式设置为utf-8
        compileJava.options.encoding = 'UTF-8'
        compileTestJava.options.encoding = 'UTF-8'
        javadoc.options.encoding = 'utf-8'
    }

    /*@SuppressWarnings("unchecked")*/
    tasks.withType(JavaCompile) {
        options.deprecation = false
        options.compilerArgs += ["-XDignore.symbol.file", "-Xdoclint:none", "-Xlint:unchecked", "-Xlint:deprecation", "-nowarn"]
    }

    repositories {
        //使用Maven本地缓存
        mavenLocal()
        maven {
            credentials {
                username 'deployment'
                password ''
            }
            url "http://192.168.1.111:8081/nexus/content/groups/public/"
        }
        /*
        def REPOSITORY_URL = 'http://maven.aliyun.com/nexus/content/groups/public/'
        all { ArtifactRepository repo ->
            def url = repo.url.toString()
            if ((repo instanceof MavenArtifactRepository) && (url.startsWith('https://repo1.maven.org/maven2') || url.startsWith('https://jcenter.bintray.com'))) {
                project.logger.lifecycle 'Repository ${repo.url} replaced by $REPOSITORY_URL .'
                remove repo
            }
        }
        */
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
            name = "阿里云"
        }
        maven {
            url "https://mirrors.huaweicloud.com/repository/maven/"
            name = "华为开源镜像库"
        }
        maven {
            url "http://repo1.maven.org/maven2"
        }
        maven {
            url "https://repo.spring.io/libs-release"
        }
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url "http://repo.spring.io/milestone" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://repository.jboss.org/nexus/content/groups/public/"
            name = "jboss"
        }
        maven {
            url "https://repository.jboss.org/nexus/content/repositories/releases/"
            name = "jbossJBPM"
        }
        jcenter()
        mavenCentral()
    }

}

subprojects {
    apply plugin: 'idea'

    dependencies {
        testCompileOnly 'org.junit.jupiter:junit-jupiter-api:5.0.1'
        testCompileOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.1'
//        compile 'junit:junit:4.9'
    }

    version '1.0.0-SNAPSHOT'
//    version '1.0.0-RELEASE'

    jar {
        manifest.attributes provider: 'springbootDemo'
    }

}


