plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

version '1.0.0-SNAPSHOT'

dependencies{
    compile("com.allchips:base:1.1.1-SNAPSHOT"){
        transitive=false
    }
    compile('com.allchips:tools:1.0.30-SNAPSHOT'){
        transitive=false
    }
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
}

task apiJar(type: Jar) {
    baseName "springbootDemo-api"
    version  "$version"

    from sourceSets.main.output
    //exclude '**/impl/**'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/*
publishing {
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            if(version.endsWith('-SNAPSHOT')) {
                url "http://192.168.1.197:8081/nexus/content/repositories/snapshots/"
            } else {
                url "http://192.168.1.197:8081/nexus/content/repositories/releases/"
            }
            credentials {
                username = 'deployment'
                password = 'deployment'
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar
            groupId "com.aaron"
            artifactId	"springbootDemo-api"
            version 	"$version"
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            //没错 我同时把resource指向了java目录 这样就可以收录java目录中的资源文件了
            resources {
                srcDirs = ['src/main/resources','src/main/java']
            }
        }
    }
}
**/
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "com.aaron"
            artifactId	"springbootDemo-api"
            version 	"$version"
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "http://192.168.1.111:8081/nexus/content/repositories/releases/"
            def snapshotsRepoUrl = "http://192.168.1.111:8081/nexus/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = 'deployment'
                password = ''
            }
        }
    }
    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            //没错 我同时把resource指向了java目录 这样就可以收录java目录中的资源文件了
            resources {
                srcDirs = ['src/main/resources','src/main/java']
            }
        }
    }
}



javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html4', true)
    }
}
