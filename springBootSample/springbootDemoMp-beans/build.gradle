buildscript {
    repositories {
        mavenLocal()
        maven {
            url "http://47.115.41.15:8081/repository/tulang-group/"
        }
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
    }
    dependencies {
        //classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }
}

//apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'maven-publish'

allprojects {

    // JDK 8
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    /*com.sun.image.codec.jpeg不存在*/
    compileJava {
        options.fork = true
        options.forkOptions.executable = "javac" // assumes that javac is on PATH
        options.compilerArgs << "-XDignore.symbol.file"
    }


    // 全局属性设置
    ext {
        // java文件编码方式设置为utf-8
        compileJava.options.encoding = 'UTF-8'
        compileTestJava.options.encoding = 'UTF-8'
        javadoc.options.encoding = 'utf-8'
    }

    repositories {

        //file("C:/Program Files/Java/jdk1.8.0_92/jre/lib/rt.jar")
        //flatDir { dirs "../lib" }
        //使用Maven本地缓存
        mavenLocal()
        maven {
            credentials {
                username 'deployment'
                password 'aaron-6868'
            }
            url "http://47.115.41.15:8081/repository/tulang-group/"
        }
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
    }

}


version = '1.0.1-SNAPSHOT'

jar {
    manifest {
        attributes 'Implementation-Title': 'tulang-beans',
                'Implementation-Version': version
    }
}

ext {
    springVersion="5.2.0.RELEASE"
}

dependencies {
    api group: 'com.ibm.icu', name: 'icu4j', version: '65.1'
    api group: 'org.apache.commons', name: 'commons-csv', version: '1.7'
    api group: 'cn.hutool', name: 'hutool-all', version: '5.6.6'
    api 'org.projectlombok:lombok:1.18.20'
    api group: 'com.github.xiaoymin', name: 'knife4j-spring-boot-starter', version: '1.9.6'
    api 'com.baomidou:mybatis-plus-boot-starter:3.3.2'
    api "javax.servlet:javax.servlet-api:3.1.0"
    api 'com.google.code.gson:gson:2.7'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.0.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.0.0"
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.0.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0'
//    testRuntime  'org.junit.vintage:junit-vintage-engine:4.12.0'
}

task apiJar(type: Jar) {
    baseName "springbootDemoMp-beans"

    from sourceSets.main.output
    //exclude '**/impl/**'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    //classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            if(version.endsWith('-SNAPSHOT')) {
                url "http://47.115.41.15:8081/repository/tulang-host/"
            } else {
                url "http://47.115.41.15:8081/repository/tulang-host/"
            }
            credentials {
                username = 'deployment'
                password = 'aaron-'
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            /*
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
            */
            groupId "com.aaron"
            artifactId	"springbootDemoMp-beans"
            version 	"$version"
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            //没错 我同时把resource指向了java目录 这样就可以收录java目录中的资源文件了
            resources {
                srcDirs = ['src/main/resources','src/main/java']
            }
        }
    }
}



